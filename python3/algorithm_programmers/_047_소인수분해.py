"""
코딩테스트 연습> 코딩테스트 입문> 소인수분해
https://school.programmers.co.kr/learn/courses/30/lessons/120852
문제 설명
  소인수분해란 어떤 수를 소수들의 곱으로 표현하는 것입니다. 예를 들어 12를 소인수 분해하면 2 * 2 * 3 으로 나타낼 수 있습니다. 따라서 12의 소인수는 2와 3입니다. 
  자연수 n이 매개변수로 주어질 때 n의 소인수를 오름차순으로 담은 배열을 return하도록 solution 함수를 완성해주세요.
제한사항
  2 ≤ n ≤ 10,000
"""



# 23.12.15: 어렵다... 그나마 방법을 찾은게 이정도인데 만약 소수가 꽤 큰 소수(예를 들어 n이 29의 제곱이었다던지, 29*31이었다던지)에서는 제거하는 과정이 끝도 없을 것이다. 
# 몇 번째 까지 해야하는지 규칙 같은게 있다면 좋을 텐데 발견이 어렵다.
def solution(n):
    # 우선 모든 약수를 찾는다
    l = []
    for i in range(2, int((n+1)/2)):
        if n%i == 0:
            l.append(i)
    # 초반의 작은 수로 나누어떨어지는 수들은 전부 제거
    for j in l[1:]:
        if j%l[0] == 0:
            l.remove(j)
    for j in l[2:]:
        if j%l[1] == 0:
            l.remove(j)
    for j in l[3:]:
        if j%l[2] == 0:
            l.remove(j)
    # 그럼 이걸 몇 번째 까지 해야할까?

    
    if len(l) == 0:
        l.append(n)

    return l
